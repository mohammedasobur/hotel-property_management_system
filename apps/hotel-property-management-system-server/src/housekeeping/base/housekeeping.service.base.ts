/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Housekeeping as PrismaHousekeeping } from "@prisma/client";
import { HousekeepingStatusUpdateInput } from "../HousekeepingStatusUpdateInput";
import { Housekeeping } from "./Housekeeping";

export class HousekeepingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HousekeepingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.housekeeping.count(args);
  }

  async housekeepings(
    args: Prisma.HousekeepingFindManyArgs
  ): Promise<PrismaHousekeeping[]> {
    return this.prisma.housekeeping.findMany(args);
  }
  async housekeeping(
    args: Prisma.HousekeepingFindUniqueArgs
  ): Promise<PrismaHousekeeping | null> {
    return this.prisma.housekeeping.findUnique(args);
  }
  async createHousekeeping(
    args: Prisma.HousekeepingCreateArgs
  ): Promise<PrismaHousekeeping> {
    return this.prisma.housekeeping.create(args);
  }
  async updateHousekeeping(
    args: Prisma.HousekeepingUpdateArgs
  ): Promise<PrismaHousekeeping> {
    return this.prisma.housekeeping.update(args);
  }
  async deleteHousekeeping(
    args: Prisma.HousekeepingDeleteArgs
  ): Promise<PrismaHousekeeping> {
    return this.prisma.housekeeping.delete(args);
  }
  async ModifyHousekeepingStatus(args: string): Promise<string> {
    throw new Error("Not implemented");
  }
  async UpdateHousekeepingStatus(args: string): Promise<string> {
    throw new Error("Not implemented");
  }
  async UpdateRoomHousekeepingStatus(
    args: HousekeepingStatusUpdateInput
  ): Promise<Housekeeping> {
    throw new Error("Not implemented");
  }
}
